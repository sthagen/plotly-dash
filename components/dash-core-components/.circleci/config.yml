version: 2.1

orbs:
  win: circleci/windows@2.4.0

jobs:
  dcc-percy-finalize:
    working_directory: ~/dash/components/dash-core-components
    docker:
      - image: percyio/agent
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
    steps:
      - checkout:
            path: ~/dash
      - run: percy finalize --all

  dcc-lint-unit-39: &lint-unit
    working_directory: ~/dash/components/dash-core-components
    docker:
      - image: circleci/python:3.9.2-buster-node-browsers
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYTHON_VERSION: py39
    steps:
      - checkout:
            path: ~/dash
      - run: echo $PYTHON_VERSION > ver.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "dev-requirements.txt" }}
      - run:
          name: 🐍 pip dev requirements
          command: |
            sudo pip install virtualenv --upgrade
            python -m venv venv || virtualenv venv && . venv/bin/activate
            pip install --progress-bar off -e git+https://github.com/plotly/dash.git@dev#egg=dash[dev,testing]
            pip install --progress-bar off --no-cache-dir -r dev-requirements.txt
      - save_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "dev-requirements.txt" }}
          paths:
              - venv
      - run:
          name: 🌸 Lint
          command: |
            . venv/bin/activate
            set -eo pipefail
            npm ci
            npm run lint

  dcc-lint-unit-36:
    <<: *lint-unit
    docker:
      - image: circleci/python:3.6.13-stretch-node-browsers
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYTHON_VERSION: py36

  dcc-build-dash-39: &build-dash
    working_directory: ~/dash/components/dash-core-components
    docker:
      - image: circleci/python:3.9.2-buster-node-browsers
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
            PYTHON_VERSION: py39
    steps:
      - checkout:
            path: ~/dash
      - run: echo $PYTHON_VERSION > ver.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "dev-requirements.txt" }}
      - run:
          name: 🐍 pip dev requirements
          command: |
            sudo pip install virtualenv --upgrade
            python -m venv venv || virtualenv venv && . venv/bin/activate
            set -eo pipefail
            pip install --progress-bar off --no-cache-dir -r dev-requirements.txt
      - save_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "dev-requirements.txt" }}
          paths:
              - venv
      - run:
          name: 🏗️ build dash
          command: |
            . venv/bin/activate && mkdir packages
            set -eo pipefail
            # build main dash & renderer
            git clone --depth 1 -b dash-monorepo git@github.com:plotly/dash.git dash-main
            cd dash-main && pip install -e .[dev] --progress-bar off && renderer build
            python setup.py sdist && mv dist/* ../packages/ && cd ..
            # build html
            git clone --depth 1 https://github.com/plotly/dash-html-components.git
            git clone --depth 1 git@github.com:plotly/dash-table.git
            cd dash-html-components && npm ci && npm run build && python setup.py sdist && mv dist/* ../packages && cd ..
            cd dash-table && npm ci && npm run build && python setup.py sdist && mv dist/* ../packages && cd ..
            # build dcc
            npm ci && npm run build && python setup.py sdist && mv dist/* ./packages && ls -la packages
      - persist_to_workspace:
          root: ~/dash/components/dash-core-components
          paths:
            - packages

  dcc-build-dash-36:
    <<: *build-dash
    docker:
      - image: circleci/python:3.6.13-stretch-node-browsers
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYTHON_VERSION: py36

  dcc-test-39: &test
    working_directory: ~/dash/components/dash-core-components
    docker:
      - image: circleci/python:3.9.2-buster-node-browsers
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
            PYTHON_VERSION: py39
            PERCY_PARALLEL_TOTAL: -1
            PERCY_ENABLE: 1
    parallelism: 3
    steps:
      - checkout:
            path: ~/dash
      - run: echo $PYTHON_VERSION > ver.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "dev-requirements.txt" }}
      - attach_workspace:
          at: ~/dash/components/dash-core-components
      - run:
          name: 🧪 Run Integration Tests
          command: |
            . venv/bin/activate && rm -rf dash_core_components && ls -la
            set -eo pipefail
            cd packages && mv dash-*.tar.gz main.tar.gz && ls -la
            find . -name "dash_*.gz" | xargs pip install -I --progress-bar off --no-cache-dir
            pip install --no-cache-dir --progress-bar off main.tar.gz[dev,testing]
            pip list | grep dash | xargs pip show && cd ..
            echo $(python -V 2>&1) | grep 3.
            TESTFILES=$(circleci tests glob "tests/integration/**/test_*.py" | circleci tests split --split-by=timings)
            pytest --headless --nopercyfinalize --junitxml=test-reports/junit_intg.xml ${TESTFILES}
      - store_artifacts:
          path: ~/dash/components/dash-core-components/test-reports
      - store_test_results:
          path: ~/dash/components/dash-core-components/test-reports
      - store_artifacts:
          path: /tmp/dash_artifacts

  dcc-test-36:
    <<: *test
    docker:
      - image: circleci/python:3.6.13-stretch-node-browsers
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYTHON_VERSION: py36
          PERCY_ENABLE: 0

workflows:
  dcc-python3.9:
    jobs:
      - dcc-lint-unit-39
      - dcc-build-dash-39
      - dcc-test-39:
          requires:
            - dcc-build-dash-39
      - dcc-percy-finalize:
          requires:
            - dcc-test-39

  dcc-python3.6:
    jobs:
      - dcc-lint-unit-36
      - dcc-build-dash-36
      - dcc-test-36:
          requires:
            - dcc-build-dash-36
