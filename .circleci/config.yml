version: 2.1

orbs:
  win: circleci/windows@2.4.0
  percy: percy/agent@0.1.3
  browser-tools: circleci/browser-tools@1.2.4

jobs:
  artifacts:
    docker:
      - image: cimg/python:3.9.9
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYVERSION: python39
          PERCY_ENABLE: 0
    steps:
      - checkout
      - run: echo $PYVERSION > ver.txt
      - run: cat requires-*.txt > requires-all.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "requires-all.txt" }}
      - attach_workspace:
          at: ~/dash
      - store_artifacts:
          path: ~/dash/dash-main
          destination: /tmp/dash-main

  install-dependencies-39: &install-dependencies
    working_directory: ~/dash
    docker:
      - image: cimg/python:3.9.9-node
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYLINTRC: .pylintrc39
          PYVERSION: python39
          PERCY_ENABLE: 0

    steps:
      - checkout
      - run: echo $PYVERSION > ver.txt
      - run: cat requires-*.txt > requires-all.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "requires-all.txt" }}
      - run:
          name: 🏁 Build Component Packages & Update Dependencies/Artifacts
          command: |
            python -m venv venv && . venv/bin/activate
            pip install --upgrade pip wheel
            set -eo pipefail
            pip install -e .[ci,dev,testing,celery,diskcache] --progress-bar off
            pip list | grep dash
            npm i
            npm run build.sequential
            python setup.py sdist
            mkdir dash-package && cp dist/*.tar.gz dash-package/dash-package.tar.gz
            ls -la dash-package
          no_output_timeout: 30m
      - run:
          name: Display npm errors and exit on failed builds
          command: |
            if [ -d "/home/circleci/.npm/_logs" ]
            then
              cat /home/circleci/.npm/_logs/*
              exit 1
            fi
      - save_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "requires-all.txt" }}
          paths:
            - venv
      - persist_to_workspace:
          root: ~/dash
          paths:
            - dash-package

  install-dependencies-36:
    <<: *install-dependencies
    docker:
      - image: cimg/python:3.6.15-node
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYLINTRC: .pylintrc
          PYVERSION: python36
          PERCY_ENABLE: 0

  lint-unit-39: &lint-unit
    working_directory: ~/dash
    docker:
      - image: cimg/python:3.9.9-browsers
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYLINTRC: .pylintrc39
          PYVERSION: python39
          PERCY_ENABLE: 0

    steps:
      - checkout
      - run: echo $PYVERSION > ver.txt
      - run: cat requires-*.txt > requires-all.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "requires-all.txt" }}
      - browser-tools/install-browser-tools
      - run:
          name: ️️🏗️ pip dev requirements
          command: |
            python -m venv venv && . venv/bin/activate
            pip install --upgrade pip wheel
            pip install -e .[ci,dev,testing] --no-cache-dir --progress-bar off
      - run:
          name: 🌸 Python & JS Lint
          command: |
            . venv/bin/activate
            set -eo pipefail
            pip install -e . --progress-bar off && pip list | grep dash
            npm install npm run initialize
            npm run build.sequential
            npm run lint
      - run:
          name: 🐍 Python Unit Tests & ☕ JS Unit Tests
          command: |
            . venv/bin/activate
            npm run citest.unit

  lint-unit-36:
    <<: *lint-unit
    docker:
      - image: cimg/python:3.6.15-browsers
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYLINTRC: .pylintrc
          PYVERSION: python36
          PERCY_ENABLE: 0

  build-windows-39:
    working_directory: ~/dash
    executor:
      name: win/default
      shell: bash.exe
    environment:
      PERCY_ENABLE: 0
    steps:
      - checkout
      - run:
          name: ️️🏗️ build core
          command: |
            pip install --no-cache-dir --upgrade -e .[dev,testing] --progress-bar off
            cd dash/dash-renderer && renderer build && cd ../../

  test-39: &test
    working_directory: ~/dash
    docker:
      - image: cimg/python:3.9.9-browsers
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PERCY_ENABLE: 1
          PERCY_PARALLEL_TOTAL: -1
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: True
          PYVERSION: python39
          REDIS_URL: redis://localhost:6379
      - image: cimg/redis:6.2.6
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
    parallelism: 3
    steps:
      - checkout:
          path: ~/dash
      - run: echo $PYVERSION > ver.txt
      - run: cat requires-*.txt > requires-all.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "requires-all.txt" }}
      - browser-tools/install-browser-tools:
          install-firefox: false
          install-geckodriver: false
      - attach_workspace:
          at: ~/dash
      - run:
          name: ️️🏗️ Install package
          command: |
            . venv/bin/activate
            npm install
            pip install dash-package/dash-package.tar.gz[ci,dev,testing,celery,diskcache] --progress-bar off
            pip list | grep dash
      - run:
          name: 🧪 Run Integration Tests
          command: |
            . venv/bin/activate
            npm run citest.integration
      - store_artifacts:
          path: test-reports
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: /tmp/dash_artifacts

  test-36:
    <<: *test
    docker:
      - image: cimg/python:3.6.15-browsers
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PERCY_ENABLE: 0
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: True
          PYVERSION: python36
          REDIS_URL: redis://localhost:6379
      - image: cimg/redis:6.2.6
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB

  dcc-lint-unit-39: &dcc-lint-unit
    working_directory: ~/dash
    docker:
      - image: cimg/python:3.9.9-node
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYVERSION: python39
          PERCY_ENABLE: 0
    steps:
      - checkout:
          path: ~/dash
      - run: echo $PYVERSION > ver.txt
      - run: cat requires-*.txt > requires-all.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "requires-all.txt" }}
      - run:
          name: 🌸 Lint
          command: |
            . venv/bin/activate
            set -eo pipefail
            cd components/dash-core-components
            npm ci
            npm run lint

  dcc-lint-unit-36:
    <<: *dcc-lint-unit
    docker:
      - image: cimg/python:3.6.15-node
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYVERSION: python36
          PERCY_ENABLE: 0

  dcc-test-39: &dcc-test
    working_directory: ~/dash
    docker:
      - image: cimg/python:3.9.9-browsers
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYVERSION: python39
          PERCY_PARALLEL_TOTAL: -1
          PERCY_ENABLE: 1
    parallelism: 3
    steps:
      - checkout:
          path: ~/dash
      - run: echo $PYVERSION > ver.txt
      - run: cat requires-*.txt > requires-all.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "requires-all.txt" }}
      - browser-tools/install-browser-tools:
          install-firefox: false
          install-geckodriver: false
      - attach_workspace:
          at: ~/dash
      - run:
          name: ️️🏗️ Install package
          command: |
            . venv/bin/activate
            pip install dash-package/dash-package.tar.gz[ci,dev,testing,celery,diskcache] --progress-bar off
            pip list | grep dash
      - run:
          name: 🧪 Run Integration Tests
          command: |
            . venv/bin/activate && rm -rf components/dash-core-components/dash_core_components
            cd components/dash-core-components
            TESTFILES=$(circleci tests glob "tests/integration/**/test_*.py" | circleci tests split --split-by=timings)
            pytest --headless --nopercyfinalize --junitxml=test-reports/junit_intg.xml --junitprefix="components.dash-core-components" ${TESTFILES}
      - store_artifacts:
          path: ~/dash/components/dash-core-components/test-reports
      - store_test_results:
          path: ~/dash/components/dash-core-components/test-reports
      - store_artifacts:
          path: /tmp/dash_artifacts

  dcc-test-36:
    <<: *dcc-test
    docker:
      - image: cimg/python:3.6.15-browsers
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYVERSION: python36
          PERCY_ENABLE: 0

  html-python-39: &html-test
    working_directory: ~/dash
    docker:
      - image: cimg/python:3.9.9-browsers
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYVERSION: python39
          PERCY_ENABLE: 1
          PERCY_PARALLEL_TOTAL: -1

    steps:
      - checkout:
          path: ~/dash
      - run: echo $PYVERSION > ver.txt
      - run: cat requires-*.txt > requires-all.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "requires-all.txt" }}
      - restore_cache:
          key: html-{{ checksum "components/dash-html-components/package.json" }}-{{ checksum "components/dash-html-components/package-lock.json" }}
      - browser-tools/install-browser-tools:
          install-firefox: false
          install-geckodriver: false
      - attach_workspace:
          at: ~/dash
      - run:
          name: ️️🏗️ Install package and html
          command: |
            . venv/bin/activate
            pip install dash-package/dash-package.tar.gz[ci,dev,testing,celery,diskcache] --progress-bar off
            pip list | grep dash
            cd components/dash-html-components
            npm ci
            npm run prebuild
      - save_cache:
          key: html-{{ checksum "components/dash-html-components/package.json" }}-{{ checksum "components/dash-html-components/package-lock.json" }}
          paths:
            - components/dash-html-components/node_modules
      - run:
          name: 🧪 Run tests
          command: |
            . venv/bin/activate
            cd components/dash-html-components
            npm run test
      - store_artifacts:
          path: ~/dash/components/dash-html-components/test-reports
      - store_test_results:
          path: ~/dash/components/dash-html-components/test-reports
      - store_artifacts:
          path: /tmp/dash_artifacts

  html-python-36:
    <<: *html-test
    docker:
      - image: cimg/python:3.6.15-browsers
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PYVERSION: python36
          PERCY_ENABLE: 0

  table-server-test:
    working_directory: ~/dash
    docker:
      - image: cimg/python:3.9.9-browsers
        environment:
          PYVERSION: python39
          PERCY_ENABLE: 1
          PERCY_PARALLEL_TOTAL: -1

    parallelism: 4

    steps:
      - checkout:
          path: ~/dash
      - run: echo $PYVERSION > ver.txt
      - run: cat requires-*.txt > requires-all.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "requires-all.txt" }}
      - browser-tools/install-browser-tools:
          install-firefox: false
          install-geckodriver: false
      - attach_workspace:
          at: ~/dash
      - run:
          name: ️️🏗️ Install package
          command: |
            . venv/bin/activate
            pip install dash-package/dash-package.tar.gz[ci,dev,testing,celery,diskcache] --progress-bar off
            pip list | grep dash
      - run:
          name: Inject Percy Environment variables
          command: |
            echo 'export PERCY_TOKEN="$PERCY_TOKEN"' >> $BASH_ENV
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            cd components/dash-table
            TESTFILES=$(circleci tests glob "tests/selenium/**/test_*.py" | circleci tests split --split-by=timings)
            pytest --nopercyfinalize --junitxml=test-reports/junit_intg.xml --junitprefix="components.dash-table" ${TESTFILES}
      - store_artifacts:
          path: ~/dash/components/dash-table/test-reports
      - store_test_results:
          path: ~/dash/components/dash-table/test-reports
      - store_artifacts:
          path: /tmp/dash_artifacts

  table-unit-test:
    working_directory: ~/dash
    docker:
      - image: cimg/python:3.9.9-browsers
        environment:
          PYVERSION: python39
          PERCY_ENABLE: 0
    steps:
      - checkout:
          path: ~/dash
      - run: echo $PYVERSION > ver.txt
      - run: cat requires-*.txt > requires-all.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "requires-all.txt" }}
      - restore_cache:
          key: table-{{ checksum "components/dash-table/package.json" }}-{{ checksum "components/dash-table/package-lock.json" }}
      - browser-tools/install-browser-tools:
          install-firefox: false
          install-geckodriver: false
      - attach_workspace:
          at: ~/dash
      - run:
          name: ️️🏗️ Install package and table deps
          command: |
            . venv/bin/activate
            pip install dash-package/dash-package.tar.gz[ci,dev,testing,celery,diskcache] --progress-bar off
            pip list | grep dash
            cd components/dash-table
            npm ci
      - save_cache:
          key: table-{{ checksum "components/dash-table/package.json" }}-{{ checksum "components/dash-table/package-lock.json" }}
          paths:
            - components/dash-table/node_modules
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            cd components/dash-table
            npm run test.unit

  table-visual-test:
    working_directory: ~/dash/components/dash-table
    docker:
      - image: cimg/node:16.13-browsers
        environment:
          PERCY_TOKEN: $PERCY_TOKEN_TABLE

    steps:
      - checkout:
          path: ~/dash
      - restore_cache:
          key: dep-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ checksum "package.json" }}
      - browser-tools/install-browser-tools:
          install-firefox: false
          install-geckodriver: false
      - run:
          name: Install package.json
          command: npm ci
      - save_cache:
          key: dep-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Run build:js
          command: npm run private::build:js
      - run:
          name: Run visual tests
          command: PERCY_TOKEN=$PERCY_TOKEN_TABLE npm run test.visual
      - store_artifacts:
          path: storybook-static

  table-node:
    working_directory: ~/dash
    docker:
      - image: cimg/python:3.9.9-node
        environment:
          PYVERSION: python39
          PERCY_ENABLE: 0
    steps:
      - checkout:
          path: ~/dash
      - run: echo $PYVERSION > ver.txt
      - run: cat requires-*.txt > requires-all.txt
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "requires-all.txt" }}
      - restore_cache:
          key: dep-{{ .Branch }}-{{ checksum "components/dash-table/package-lock.json" }}-{{ checksum "components/dash-table/package.json" }}
      - run:
          name: Install package.json
          command: cd components/dash-table && npm ci
      - save_cache:
          key: dep-{{ .Branch }}-{{ checksum "components/dash-table/package-lock.json" }}-{{ checksum "components/dash-table/package.json" }}
          paths:
            - components/dash-table/node_modules
      - attach_workspace:
          at: ~/dash
      - run:
          name: Install requirements
          command: |
            . venv/bin/activate
            pip install dash-package/dash-package.tar.gz[ci,dev,testing]

      - run:
          name: Run eslint
          command: |
            . venv/bin/activate
            cd components/dash-table
            npm run lint
          when: always

workflows:
  version: 2
  tests:
    jobs:
      - install-dependencies-39
      - install-dependencies-36

      - build-windows-39

      - lint-unit-39:
          requires:
            - install-dependencies-39
      - lint-unit-36:
          requires:
            - install-dependencies-36

      - test-39:
          requires:
            - install-dependencies-39
      - test-36:
          requires:
            - install-dependencies-36

      - dcc-lint-unit-39:
          requires:
            - install-dependencies-39
      - dcc-lint-unit-36:
          requires:
            - install-dependencies-36

      - dcc-test-39:
          requires:
            - install-dependencies-39
      - dcc-test-36:
          requires:
            - install-dependencies-36

      - html-python-39:
          requires:
            - install-dependencies-39
      - html-python-36:
          requires:
            - install-dependencies-36

      - table-node:
          requires:
            - install-dependencies-39
      - table-unit-test:
          requires:
            - install-dependencies-39
      - table-visual-test
      - table-server-test:
          requires:
            - install-dependencies-39

      - percy/finalize_all:
          requires:
            - test-39
            - dcc-test-39
            - html-python-39
            - table-server-test
      - artifacts:
          requires:
            - percy/finalize_all
          filters:
            branches:
              only:
                - master
                - dev
            tags:
              only: /v*/
